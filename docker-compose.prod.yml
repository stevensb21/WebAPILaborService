services:
  laravel-app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: laravel-app-prod
    restart: unless-stopped
    volumes:
      - ./storage:/var/www/html/storage
      - .:/var/www/html
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=laravel-db-prod
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${APP_URL}
      - APP_KEY=${APP_KEY}
    networks:
      - laravel-network-prod
    depends_on:
      - laravel-db-prod

  laravel-db:
    image: postgres:17-alpine
    container_name: laravel-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - laravel-network-prod

  laravel-nginx:
    image: nginx:alpine
    container_name: laravel-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/www/html/public
      - ./storage/app/public:/var/www/html/public/storage
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - laravel-app
    networks:
      - laravel-network-prod

networks:
  laravel-network-prod:
    driver: bridge

volumes:
  postgres_data_prod:
